@charset "utf-8";

/**
 * @module 边框
 * @description 为元素添加边框（包括1px边框）
 * @method border
 * @param {String} $border-width 指定边框厚度（单位为px），默认值：1px，取值与`border-width`属性一致，不同方向代表边框位置 
 * @param {String} $border-color 指定边框颜色 
 * @param {String} $border-style 指定边框样式 
 * @param {String} $radius 指定边框圆角半径，默认值：null 
 */

@mixin phoneMedia($radius: null) {
  // 适配dpr进行缩放
  @media (max--moz-device-pixel-ratio: 1.49),
    (-webkit-max-device-pixel-ratio: 1.49),
    (max-device-pixel-ratio: 1.49),
    (max-resolution: 143dpi),
    (max-resolution: 1.49dppx) {
    width: 100%;
    height: 100%;
    @if $radius != null {
      border-radius: $radius;
    }
  }

  @media (min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49),
    (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49),
    (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49),
    (min-resolution: 144dpi) and (max-resolution: 239dpi),
    (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx) {
    width: 200%;
    height: 200%;
    transform: scale(0.5);
    @if $radius != null {
      border-radius: $radius * 2;
    }
  }

  @media (min--moz-device-pixel-ratio: 2.5),
    (-webkit-min-device-pixel-ratio: 2.5),
    (min-device-pixel-ratio: 2.5),
    (min-resolution: 240dpi),
    (min-resolution: 2.5dppx) {
    width: 300%;
    height: 300%;
    transform: scale(0.33333);
    @if $radius != null {
      border-radius: $radius * 3;
    }
  }
}

@mixin afterContent() {
  // 用以解决边框layer遮盖内容
  pointer-events: none;
  position: absolute;
  z-index: 999;
  top: 0;
  left: 0;
  // fix当元素宽度出现小数时，边框可能显示不全的问题
  // overflow: hidden;
  content: "\0020";
  box-sizing: border-box;
  // 缩放中心
  transform-origin: 0 0;
}

@mixin border(
  $border-width: 1px,
  $border-style: solid,
  $border-color: #000,
  $radius: null
) {
  // 为边框位置提供定位参考
  position: relative;
  @if $border-width == null {
    $border-width: 0;
  }
  border-radius: $radius;
  &::after {
    @include afterContent();
    @include phoneMedia($radius);
    border-color: $border-color;
    border-style: $border-style;
    border-width: $border-width;
  }
}

@mixin border-top(
  $border-width: 1px,
  $border-style: solid,
  $border-color: #000,
  $radius: null
) {
  // 为边框位置提供定位参考
  position: relative;
  &::after {
    @include afterContent();
    @include phoneMedia($radius);
    // 缩放中心
    transform-origin: left top;
    border-top-color: $border-color;
    border-top-style: $border-style;
    border-top-width: $border-width;
  }
}

@mixin border-bottom(
  $border-width: 1px,
  $border-style: solid,
  $border-color: #000,
  $radius: null
) {
  // 为边框位置提供定位参考
  position: relative;
  &::after {
    @include afterContent();
    @include phoneMedia($radius);
    border-bottom-color: $border-color;
    border-bottom-style: $border-style;
    border-bottom-width: $border-width;
  }
}

@mixin border-left(
  $border-width: 1px,
  $border-style: solid,
  $border-color: #000,
  $radius: null
) {
  // 为边框位置提供定位参考
  position: relative;
  &::after {
    @include afterContent();
    @include phoneMedia($radius);
    border-left-color: $border-color;
    border-left-style: $border-style;
    border-left-width: $border-width;
  }
}

@mixin border-right(
  $border-width: 1px,
  $border-style: solid,
  $border-color: #000,
  $radius: null
) {
  // 为边框位置提供定位参考
  position: relative;
  &::after {
    @include afterContent();
    @include phoneMedia($radius);
    border-right-color: $border-color;
    border-right-style: $border-style;
    border-right-width: $border-width;
  }
}
